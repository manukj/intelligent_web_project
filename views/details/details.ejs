<!DOCTYPE html>
<html>
  <!-- Service working Implementation should be uncommented at the end of the project -->
  <!-- <script>
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker.register("/sw.js", { scope: "/" });
    }
  </script> -->
  <head>
    <title><% %></title>
    <link href="/css/output.css" rel="stylesheet" />
    <link rel="manifest" href="/manifest.json" />
  </head>
  <body class="m-10 p-10">
    <h1 class="text-lg font-bold"><% %></h1>
    <p>Welcome to </p>
  <p>
    <%=data.name %>
  </p>
  </body>

  <script
    src="/tw-elements/dist/js/tw-elements.umd.min.js"
    type="text/javascript"
  ></script>
  <script>

    document.getElementById("myForm").addEventListener("submit",function(event){
      // 检查用户是否在线
      event.preventDefault();

      const formData = {
        name:document.getElementById("name").value,
        email:document.getElementById("email").value
      }

      if (navigator.onLine){
        console.log("online");

      }else {
        console.log("offline");
        // 如果离线，则将表单数据存储到 IndexedDB
        addToIndexedDB("myDataBase", "form1", formData);
      }
    })

    function addToIndexedDB(databaseName,storeName,data){
      const request = indexedDB.open(databaseName,3);

      request.onsuccess = function(event) {
        const db = event.target.result;
        console.log("数据库打开成功");

        const transaction = db.transaction(["storeName"],"readwrite");
        console.log('3')
        const store = transaction.objectStore("storeName");

        console.log("2")
        const addRequest = store.add(data);
        console.log("1")
        // 添加数据成功后的处理函数
        addRequest.onsuccess = function(event) {
          console.log("数据添加成功");
        };

        // 添加数据失败后的处理函数
        addRequest.onerror = function(event) {
          console.error("数据添加失败", event.target.error);
        };

        // 完成事务
        transaction.oncomplete = function(event) {
          console.log("事务完成");
        };
        db.close();
      };
      // 当需要升级数据库结构时的处理函数
      request.onupgradeneeded = function(event) {
        var db = event.target.result;
        console.log("需要升级数据库结构");

        const store = db.createObjectStore("form2", { keyPath: "name" });
        // 创建对象存储空间或者进行其他数据库结构变更操作
      };

      // 当打开或创建数据库遇到错误时的处理函数
      request.onerror = function(event) {
        console.log("数据库打开或创建失败");
      };
    }
  </script>
</html>
